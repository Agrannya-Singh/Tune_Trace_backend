"""Create initial tables

Revision ID: 999777df0f65
Revises: 
Create Date: 2025-09-20 20:28:52.746149

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '999777df0f65'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('song_metadata',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('video_id', sa.String(length=64), nullable=False, comment='YouTube video ID.'),
    sa.Column('title', sa.String(length=512), nullable=False),
    sa.Column('artist', sa.String(length=256), nullable=False, comment='Typically the YouTube channel title.'),
    sa.Column('genre', sa.String(length=128), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True, comment='Comma-separated tags from YouTube.'),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('video_id', name='uq_video_id')
    )
    op.create_index(op.f('ix_song_metadata_genre'), 'song_metadata', ['genre'], unique=False)
    op.create_index(op.f('ix_song_metadata_video_id'), 'song_metadata', ['video_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(length=128), nullable=False, comment='The unique external identifier for the user.'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=True)
    op.create_table('user_liked_songs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['song_id'], ['song_metadata.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'song_id', name='uq_user_song')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_liked_songs')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_song_metadata_video_id'), table_name='song_metadata')
    op.drop_index(op.f('ix_song_metadata_genre'), table_name='song_metadata')
    op.drop_table('song_metadata')
    # ### end Alembic commands ###
